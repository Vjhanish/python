class Solution(object):
    def solve(self, grid):
        dir=[(1,0),(-1,0),(0,1),(0,-1)]
        m,n=len(grid),len(grid[0])
        vis=[[9]*n for _ in range(m)]
        s=[]
        for i in range(m):
            for j in range(n):
                if grid[i][j]=="O":
                    vis[i][j]=1
                    if (i==0 or j==0 or i==m-1 or j==n-1):
                        s.append((i,j))
        def bfs(i,j):
            q=deque()
            q.append((i,j))
            vis[i][j]=0
            while q:
                x,y=q.popleft()
                for dx,dy in dir:
                    i,j=x+dx,y+dy
                    if 0<=i<m and 0<=j<n and grid[i][j]=="O" and vis[i][j]==1:
                        q.append((i,j))
                        vis[i][j]=0

        for x,y in s:
            if vis[x][y]!=0:
                bfs(x,y)
        for i in range(m):
            for j in range(n):
                if vis[i][j]==1:
                    grid[i][j]="X"
        
