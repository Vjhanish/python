# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def insertionSortList(self, head):
        """
        :type head: ListNode
        :rtype: ListNode
        """
        curr = head 
        prev = None 
        while curr:
            if prev and curr.val < prev.val:
                if head.val > curr.val:
                    prev.next = curr.next 
                    curr.next = head 
                    head = curr 
                else:
                    prev.next = curr.next 
                    pre = head 
                    while pre and pre.next.val < curr.val:
                        pre = pre.next 
                    curr.next = pre.next 
                    pre.next = curr 
                curr = prev.next 
            else:
                prev = curr 
                curr = curr.next 

        return head 
