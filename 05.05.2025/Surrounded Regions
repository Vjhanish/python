# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def sumNumbers(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        res=[]
    #it creates list from root to leaf in temp and then empty the temp after putting it in res    
        res =[]
    
        def helper(node,curr):
            if node is None:
                return
            curr.append(node.val)
            if node.left is None and node.right is None:
                res.append(curr[:])
            else:
                helper(node.left,curr)
                helper(node.right,curr)
            curr.pop()
            return res
        result=helper(root,[])
        tsum=''
        total=0
        for i in result:
            for j in i:
                tsum=tsum+str(j)
            total=total+int(tsum) 
            tsum=''
        return total       



    
